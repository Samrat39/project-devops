name: microservices-ci

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'ultimate-devops-project-demo/kubernetes/**/deploy.yaml'
  pull_request:
    branches:
      - main

jobs:
  build-test:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [product-catalog, frontend-proxy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Download Dependencies & Build
        run: |
          cd ultimate-devops-project-demo/src/${{ matrix.service }}
          go mod download
          go build -o ${{ matrix.service }}-service main.go

      - name: Run Unit Tests
        run: |
          cd ultimate-devops-project-demo/src/${{ matrix.service }}
          go test ./...

  code-quality:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [product-catalog, frontend-proxy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache-dependency-path: ultimate-devops-project-demo/src/${{ matrix.service }}/go.sum

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55.2
          working-directory: ultimate-devops-project-demo/src/${{ matrix.service }}
          args: ./...

  docker:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest
    needs: build-test
    strategy:
      matrix:
        service: [product-catalog, frontend-proxy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ultimate-devops-project-demo/src/${{ matrix.service }}
          file: ultimate-devops-project-demo/src/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.run_id }}

  update-k8s:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest
    needs: docker
    strategy:
      matrix:
        service: [product-catalog, frontend-proxy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Update Image Tag in Deployment Manifest
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.run_id }}|" \
          ultimate-devops-project-demo/kubernetes/${{ matrix.service }}/deploy.yaml

      - name: Commit and Push Changes
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "Manoj choudhry"
          git config --global user.email "manojsamrat32@gmail.com"

          BRANCH_NAME="${GITHUB_HEAD_REF:-main}"

          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git fetch --prune origin "${BRANCH_NAME}"
          git checkout "${BRANCH_NAME}" || git checkout -b "${BRANCH_NAME}"

          git add ultimate-devops-project-demo/kubernetes/${{ matrix.service }}/deploy.yaml
          git commit -m "Update ${{ matrix.service }} image tag [skip-ci]" || echo "No changes to commit"

          git push origin "${BRANCH_NAME}"
